# Generated by Django 4.0.1 on 2022-02-20 12:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatCommunication',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('chat_timestamp', models.DateTimeField(blank=True, db_column='CHAT_TIMESTAMP', null=True)),
                ('message_json', models.CharField(blank=True, db_column='MESSAGE_JSON', max_length=2000, null=True)),
            ],
            options={
                'db_table': 'CHAT_COMMUNICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumerCart',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('price', models.IntegerField(db_column='PRICE')),
                ('quantity', models.IntegerField(db_column='QUANTITY')),
            ],
            options={
                'db_table': 'CONSUMER_CART',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.AutoField(db_column='CUSTOMER_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='USERNAME', max_length=20, unique=True)),
                ('lname', models.CharField(db_column='LNAME', max_length=20)),
                ('pno', models.BigIntegerField(blank=True, db_column='PNO', null=True, unique=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=20, null=True)),
                ('pincode', models.IntegerField(blank=True, db_column='PINCODE', null=True)),
                ('email', models.CharField(db_column='EMAIL', max_length=20, unique=True)),
                ('fname', models.CharField(db_column='FNAME', max_length=20)),
            ],
            options={
                'db_table': 'CUSTOMER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('farmer_id', models.AutoField(db_column='FARMER_ID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='USERNAME', max_length=20, unique=True)),
                ('fname', models.CharField(db_column='FNAME', max_length=20)),
                ('lname', models.CharField(db_column='LNAME', max_length=20)),
                ('pno', models.BigIntegerField(blank=True, db_column='PNO', null=True, unique=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=20, null=True)),
                ('pincode', models.IntegerField(blank=True, db_column='PINCODE', null=True)),
                ('email', models.CharField(db_column='EMAIL', max_length=20, unique=True)),
            ],
            options={
                'db_table': 'FARMER',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SoldBy',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('price', models.IntegerField(db_column='PRICE')),
                ('quantity', models.IntegerField(db_column='QUANTITY')),
            ],
            options={
                'db_table': 'SOLD_BY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(db_column='PRODUCT_ID', primary_key=True, serialize=False)),
                ('product_name', models.CharField(db_column='PRODUCT_NAME', max_length=20)),
                ('category', models.CharField(blank=True, db_column='CATEGORY', max_length=20, null=True)),
                ('product_desc', models.CharField(db_column='PRODUCT_DESC', max_length=200)),
                ('img', models.ImageField(blank=True, db_column='IMG', max_length=10000, null=True, upload_to='greenmarket/images')),
            ],
            options={
                'db_table': 'PRODUCT',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='QUANTITY')),
                ('purchase_price', models.IntegerField(db_column='PURCHASE_PRICE')),
                ('purchase_timestamp', models.DateTimeField(blank=True, db_column='PURCHASE_TIMESTAMP', null=True)),
                ('customer', models.ForeignKey(db_column='CUSTOMER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='greenmarket.customer')),
                ('farmer', models.ForeignKey(db_column='FARMER_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='greenmarket.farmer')),
                ('product', models.ForeignKey(db_column='PRODUCT_ID', on_delete=django.db.models.deletion.DO_NOTHING, to='greenmarket.product')),
            ],
            options={
                'db_table': 'PURCHASES',
                'managed': True,
            },
        ),
    ]
